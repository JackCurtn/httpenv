---
# template source: https://github.com/bretfisher/docker-build-workflow/blob/main/templates/call-docker-build.yaml
name: Docker Build

on:
  push:
    branches:
      - main
    # don't rebuild image if someone only edited unrelated files
    paths-ignore:
      - "README.md"
      - ".github/linters/**"
  pull_request:
    # don't rebuild image if someone only edited unrelated files
    paths-ignore:
      - "README.md"
      - ".github/linters/**"

jobs:
  buld-image:
    name: Build image # Login to Docker Hub
    runs-on: ubuntu-latest
    permissions: # Give permission to create PR comments
      pull-requests: write

    steps:
      # Multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Caching for Docker Build step
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Get metadata (tags, labels) for Docker
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: jackcurtn/httpenv
          flavor: |
            latest=false
          tags: |
            type=raw,value=04
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}

      # Build and push Docker image
      - name: Docker Build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      # If PR, find existing comment for image tags
      # from https://github.com/marketplace/actions/create-or-update-comment
      - name: Find comment for image tags
        uses: peter-evans/find-comment@v3
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Docker image tag(s) pushed

        # If PR, put image tags in the PR comments
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```

            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace
